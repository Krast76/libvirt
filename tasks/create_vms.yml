- name: Create host folder
  file:
    name: "{{ libvirt_image_dir }}/{{ vm.name }}"
    mode: 0755
    owner: root
    group: root
    state: directory

- name: Create disk images
  shell: "qemu-img create -f qcow2 -b {{ libvirt_image_base_dir }}/{{ vm.image }}.qcow2 {{ libvirt_image_dir }}/{{ vm.name }}/disk {{ vm.size }}"
  args:
    creates: "{{ libvirt_image_dir }}/{{ vm.name }}/disk"

- name: Create additional disks
  shell: "qemu-img create -f raw {{ libvirt_image_dir }}/{{ vm.name }}/{{ item.name }} {{ item.size }}"
  args:
    creates: "{{ libvirt_image_dir }}/{{ vm.name }}/{{ item.name }}"
  with_items: "{{ vm.disks }}"

- name: Create user-data
  template:
    src: user-data
    dest: "{{ libvirt_image_dir }}/{{ vm.name }}/user-data"
    mode: 0644
    owner: root
    group: root
  register: user_data_updated
  tags:
    - user-data

- name: Create meta-data
  template:
    src: meta-data
    dest: "{{ libvirt_image_dir }}/{{ vm.name }}/meta-data"
    mode: 0644
    owner: root
    group: root
  register: meta_data_updated

- name: Create network-config
  template:
    src: network-config
    dest: "{{ libvirt_image_dir }}/{{ vm.name }}/network-config"
    mode: 0644
    owner: root
    group: root
  when: vm.network_configs is defined

- name: Generate cloudconfig iso
  shell: "genisoimage -output {{ libvirt_image_dir }}/{{ vm.name }}/cloudconfig.iso -volid cidata -joliet -r {{ libvirt_image_dir }}/{{ vm.name }}/user-data {{ libvirt_image_dir }}/{{ vm.name }}/meta-data {% if vm.network_configs is defined %}{{ libvirt_image_dir }}/{{ vm.name }}/network-config{% endif %} &>> {{ libvirt_image_dir }}/{{ vm.name }}/cloudconfig.log"
  when: (user_data_updated is changed) and (meta_data_updated is changed)

- name: Define host
  virt:
    name: "{{ vm.name }}"
    command: define
    xml: "{{ lookup('template', 'host.xml') }}"

- name: Start host
  virt:
    name: "{{ vm.name }}"
    state: running

